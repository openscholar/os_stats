<?php 

/*
 * @file 
 * 
 * openscholar statistics block module
 */

/*
 * Implementation of hook_block
 */
function os_stats_block($op = 'list', $delta = 0, $edit = array()) {
 	switch($op) {
 		case 'list':
 			$blocks[0]['info'] = t('OpenScholar Statistics');
 			$blocks[0]['cache'] = BLOCK_CACHE_GLOBAL;
 			return $blocks;
 			break;
 		case 'view':
 			$block['subject'] = "OpenScholar Statistics";
 			$block['content'] = theme('os_stats_block', _os_stats_content(), '');
 			$block['status'] = TRUE;
 			$block['region'] = 'footer';
 			$block['pages'] = '<front>';
 			return $block;
 			break;
 			
 	}
 
}

/**
 * Implementation of hook_menu()
 */
function os_stats_menu() {
	$items['admin/os_stats'] = array(
		'title' => 'OpenScholar Statistics',
		'description' => 'Adjust OpenScholar Statistics settings',
		'position' => 'right',
		'weight' => -5,
		'page callback' => 'system_admin_menu_block_page',
		'access arguments' => array('administer site configuration'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module', 'system'),
	);
	$items['admin/os_stats/settings'] = array(
		'title' => 'OpenScholar Statistics Settings',
		'description' => 'Change how OpenScholar Statistics behaves',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('os_stats_admin_settings'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'os_stats.admin.inc',
		//'file path' => drupal_get_path('module', 'os_stats'),
	);
	return $items;
}

function os_stats_admin_settings() {
	$form['os_stats_cache_expiration'] = array(
		'#type' => 'textfield',
		'#title' => 'OpenScholar Statistics Cache Expiration',
		'#description' => t('How long (in seconds) should statistics remain in cache before cron can refresh them?'),
		'#default_value' => variable_get('os_stats_cache_expiration', 3600),
		'#size' => 3,
	);	
	return system_settings_form($form);
}
 
/**
 * Implementation of hook_theme()
 */
function os_stats_theme() {
	return array(
		'os_stats_block' => array(
			'arguments' => array(
				'text' => NULL,
				'origin' => NULL,
			),
		),
	);
}

/**
 * Theme function for os_stats_block
 */
function theme_os_stats_block($text, $origin) {
	$out = theme_item_list($text, NULL, 'ul');
    return $out;
}

/**
 * returns array of stat name => its query
 */
function _os_stats_stats() {
	return array(
		"Publications" => "SELECT COUNT(nid) FROM {node} WHERE type='biblio'",
		"Vsites" => "SELECT COUNT(nid) FROM {og}",
		"Nodes" =>  "SELECT COUNT(nid) FROM {node}",
		"Files" =>  "SELECT COUNT(fid) FROM {files}",
		"MB Uploaded" => "SELECT(SELECT SUM(filesize) FROM {files}) / (1024.0*1024.0)",
	);
}
 
/** 
 * Gets data from db, interacts with cache
 */
function _os_stats_content() {
	//$out = "";
	$data = array();
	
	//check cache
	if ($cache = cache_get('os_stats_data')) {
		$data = unserialize($cache->data);
		//$out .= "<i>cached</i><Br />";
	} else {
		//build and store data
		//$out .= "<i>uncached...rebuilding</i><Br />";
		
		foreach (_os_stats_stats() as $stat => $query) {
			$data[] = $stat . ': ' . db_result(db_query($query));
		}

		cache_set('os_stats_data', serialize($data), 'cache', time() + variable_get('os_stats_cache_expiration', 3600));	
	}
	
	/*
	foreach($data as $key => $value) {
		$out .= $key . ': ' . $value . '<br />';	
	}*/
	
	return $data;
}

// expiration happens during cron, so maybe a cron hook after cache clear could still run _os_stats_content...
