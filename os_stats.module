<?php 

/*
 * @file 
 * 
 * openscholar statistics block module
 */

/*
 * Implementation of hook_block
 */
function os_stats_block($op = 'list', $delta = 0, $edit = array()) {
 	switch($op) {
 		case 'list':
 			$blocks[0]['info'] = t('OpenScholar Statistics');
 			$blocks[0]['cache'] = BLOCK_CACHE_GLOBAL;
 			return $blocks;
 			break;
 		case 'view':
 			$block['subject'] = "OpenScholar Statistics";
 			$block['content'] = _os_stats_content();
 			return $block;
 			break;
 			
 	}
 
}
 

/**
 * returns array of stat name => its query
 */
function _os_stats_stats() {
	return array(
		"Publications" => "SELECT COUNT(nid) FROM {node} WHERE type='biblio'",
		"Vsites" => "SELECT COUNT(nid) FROM {og}",
	);
}
 
/** 
 * Gets data from db, interacts with cache
 */
function _os_stats_content() {
	$out = "";
	$data = array();
	
	//check cache
	if ($cache = cache_get('os_stats_data')) {
		$data = unserialize($cache->data);
		$out .= "<i>cached</i><Br />";
	} else {
		//build and store data
		$out .= "<i>uncached...rebuilding</i><Br />";
		
		foreach (_os_stats_stats() as $stat => $query) {
			$data[$stat] = db_result(db_query($query));
		}

		cache_set('os_stats_data', serialize($data), 'cache', time() + 60);	
	}
	
	foreach($data as $key => $value) {
		$out .= $key . ': ' . $value . '<br />';	
	}
	
	return $out;
}